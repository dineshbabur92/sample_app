ruby -v
mkdir Rails_Projects
cd Rails_Projects
rails new first_app
notepad++ Gemfile
bundle update
bundle install
rails server
$ git config --global user.name "Your Name"
$ git config --global user.email your.email@example.com
$ git config --global alias.co checkout
$ git config --global core.editor "subl -w"
$ git init
git add .
git status
git commit -m "Initialize repository"
git log
git checkout -f


//in git bash:
ls -al ~/.ssh
ssh-keygen -t rsa -C "your_email@example.com"
eval "$(ssh-agent -s)"
# Agent pid 59566
ssh-add ~/.ssh/id_rsa
clip < ~/.ssh/id_rsa.pub
ssh -T git@github.com
//end

$ git remote add origin https://github.com/<username>/first_app.git
$ git push -u origin master

git remote rm origin

//commit existing files in branch
git commit -a -m "Improve the README file"
//2 files changed, 5 insertions(+), 243 deletions(-)
//delete mode 100644 README.rdoc
//create mode 100644 README.md

$ git checkout master
//Switched to branch 'master'
$ git merge modify-README

//delete after merging
$ git branch -d modify-README
//Deleted branch modify-README (was 2c92bef).

//delete without merging to master
$ git checkout -b topic-branch
//$ <really screw up the branch>
$ git add .
$ git commit -a -m "Major screw up"
$ git checkout master
$ git branch -D topic-branch

//. Since we have already done one push (Section 1.3.4), on most systems //we can omit origin master, and simply run git push
$ git push

bundle install --without production
 git commit -a -m "Update Gemfile.lock for Heroku"
 
 bundle update railties
 
 $ rails generate scaffold User name:string email:string
 
 $ bundle exec rake db:migrate
 //start
 Note that, in order to ensure that the command uses the version of Rake corresponding to our Gemfile, we need to run rake using bundle exec.
 //end
 
 rails generate scaffold Micropost content:string user_id:integer
 bundle exec rake db:migrate
 
$ rails console
>> first_user = User.first
=> #<User id: 1, name: "Michael Hartl", email: "michael@example.org",
created_at: "2013-03-06 02:01:31", updated_at: "2013-03-06 02:01:31">
>> first_user.microposts
=> [#<Micropost id: 1, content: "First micropost!", user_id: 1, created_at:
"2013-03-06 02:37:37", updated_at: "2013-03-06 02:37:37">, #<Micropost id: 2,
content: "Second micropost", user_id: 1, created_at: "2013-03-06 02:38:54",
updated_at: "2013-03-06 02:38:54">]
>> exit

//start

starting rails console ( me : to check data models i guess ) and exiting 

(I include the last line just to demonstrate how to exit the console, and on most systems you can Ctrl-d for the same purpose.)
//end

gem uninstall rails

gem install rspec
rails generate rspec:install

//start
we need to configure Rails to use RSpec in place of Test::Unit. This can be accomplished with rails generate rspec:install:
//end


 git checkout -b static-pages
 
 $ rails generate controller FooBars baz quux
  $ rails destroy  controller FooBars baz quux
  
  //( me : bax quux exact arguements used to destroy entries in routes.rb files too i guess//
  
  
  
  
 
 
